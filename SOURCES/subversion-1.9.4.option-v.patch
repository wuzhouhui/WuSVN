diff --git a/subversion/include/private/svn_cmdline_private.h b/subversion/include/private/svn_cmdline_private.h
index 3f05b00..477bf7e 100644
--- a/subversion/include/private/svn_cmdline_private.h
+++ b/subversion/include/private/svn_cmdline_private.h
@@ -201,6 +201,7 @@ svn_cmdline__edit_string_externally(svn_string_t **edited_contents,
                                     svn_boolean_t as_text,
                                     const char *encoding,
                                     svn_boolean_t verbose,
+                                    const apr_array_header_t *commit_items,
                                     apr_pool_t *pool);
 
 
diff --git a/subversion/include/svn_client.h b/subversion/include/svn_client.h
index b9d2d31..5ca1654 100644
--- a/subversion/include/svn_client.h
+++ b/subversion/include/svn_client.h
@@ -534,6 +534,14 @@ typedef struct svn_client_commit_item3_t
    */
   const char *moved_from_abspath;
 
+  /**
+   * When processing commit, this contains the relative path that relative to
+   * CWD when getting log message from external editor. #NULL until generating
+   * log message template and verbose enabled.
+   * @since New in 1.8.
+   */
+  const char *diff_relpath;
+
 } svn_client_commit_item3_t;
 
 /** The commit candidate structure.
diff --git a/subversion/libsvn_client/commit.c b/subversion/libsvn_client/commit.c
index 4a945c8..f63a2e3 100644
--- a/subversion/libsvn_client/commit.c
+++ b/subversion/libsvn_client/commit.c
@@ -798,6 +798,14 @@ svn_client_commit6(const apr_array_header_t *targets,
         }
     }
 
+  /* Sort and condense our COMMIT_ITEMS. */
+  cmt_err = svn_error_trace(svn_client__condense_commit_items(&base_url,
+                                                              commit_items,
+                                                              pool));
+
+  if (cmt_err)
+    goto cleanup;
+
   /* Go get a log message.  If an error occurs, or no log message is
      specified, abort the operation. */
   if (SVN_CLIENT__HAS_LOG_MSG_FUNC(ctx))
@@ -813,14 +821,6 @@ svn_client_commit6(const apr_array_header_t *targets,
   else
     log_msg = "";
 
-  /* Sort and condense our COMMIT_ITEMS. */
-  cmt_err = svn_error_trace(svn_client__condense_commit_items(&base_url,
-                                                              commit_items,
-                                                              pool));
-
-  if (cmt_err)
-    goto cleanup;
-
   /* Collect our lock tokens with paths relative to base_url. */
   cmt_err = svn_error_trace(collect_lock_tokens(&lock_tokens, lock_tokens,
                                                 base_url, pool));
diff --git a/subversion/libsvn_subr/cmdline.c b/subversion/libsvn_subr/cmdline.c
index 71863f6..c5316f1 100644
--- a/subversion/libsvn_subr/cmdline.c
+++ b/subversion/libsvn_subr/cmdline.c
@@ -43,6 +43,7 @@
 #include <apr_strings.h>        /* for apr_snprintf */
 #include <apr_pools.h>
 
+#include "svn_client.h"
 #include "svn_cmdline.h"
 #include "svn_ctype.h"
 #include "svn_dso.h"
@@ -1321,6 +1322,7 @@ svn_cmdline__edit_string_externally(svn_string_t **edited_contents /* UTF-8! */,
                                     svn_boolean_t as_text,
                                     const char *encoding,
                                     svn_boolean_t verbose,
+                                    const apr_array_header_t *commit_items,
                                     apr_pool_t *pool)
 {
   const char *editor;
@@ -1432,10 +1434,26 @@ svn_cmdline__edit_string_externally(svn_string_t **edited_contents /* UTF-8! */,
     }
 
   if (verbose) {
-    char *buf = apr_pcalloc(pool, (strlen("svn di >> ") + strlen(tmpfile_name)
-          + 2) * sizeof(*buf));
-    sprintf(buf, "svn di >> %s", tmpfile_name);
-    system(buf);
+    int i, len = 0;
+    char *buf;
+    for (i = 0; i < commit_items->nelts; i++)
+      {
+        int t = strlen((APR_ARRAY_IDX(commit_items, i,
+                svn_client_commit_item3_t *))->diff_relpath);
+        if (t > len)
+          len = t;
+      }
+    buf = apr_pcalloc(pool, (strlen("svn di --properties-only  >> ") +
+          strlen(tmpfile_name) + len + 2) * sizeof(*buf));
+    for (i = 0; i < commit_items->nelts; i++)
+      {
+        svn_client_commit_item3_t *item
+            = APR_ARRAY_IDX(commit_items, i, svn_client_commit_item3_t *);
+        sprintf(buf, "svn di %s %s >> %s",
+            item->state_flags & SVN_CLIENT_COMMIT_ITEM_PROP_MODS ?
+            "--properties-only" : "", item->diff_relpath, tmpfile_name);
+        system(buf);
+      }
   }
 
   err = svn_path_cstring_from_utf8(&tmpfile_apr, tmpfile_name, pool);
diff --git a/subversion/svn/propedit-cmd.c b/subversion/svn/propedit-cmd.c
index 167c691..8cca60b 100644
--- a/subversion/svn/propedit-cmd.c
+++ b/subversion/svn/propedit-cmd.c
@@ -146,7 +146,7 @@ svn_cl__propedit(apr_getopt_t *os,
                propval, "svn-prop",
                ctx->config,
                svn_prop_needs_translation(pname_utf8),
-               opt_state->encoding, opt_state->verbose, pool));
+               opt_state->encoding, opt_state->verbose, NULL, pool));
 
       /* ...and re-set the property's value accordingly. */
       if (propval)
@@ -285,6 +285,7 @@ svn_cl__propedit(apr_getopt_t *os,
                                                       (pname_utf8),
                                                       opt_state->encoding,
                                                       opt_state->verbose,
+                                                      NULL,
                                                       subpool));
 
           target_local = svn_path_is_url(target) ? target
diff --git a/subversion/svn/util.c b/subversion/svn/util.c
index a341d27..1004975 100644
--- a/subversion/svn/util.c
+++ b/subversion/svn/util.c
@@ -403,6 +403,9 @@ svn_cl__get_log_message(const char **log_msg,
           if (! path || !*path)
             path = ".";
 
+	  if (lmb->verbose)
+            item->diff_relpath = path;
+
           if ((item->state_flags & SVN_CLIENT_COMMIT_ITEM_DELETE)
               && (item->state_flags & SVN_CLIENT_COMMIT_ITEM_ADD))
             text_mod = 'R';
@@ -445,6 +448,7 @@ svn_cl__get_log_message(const char **log_msg,
                                                     lmb->config, TRUE,
                                                     lmb->message_encoding,
                                                     lmb->verbose,
+                                                    commit_items,
                                                     pool);
         }
       else /* non_interactive flag says we can't pop up an editor, so error */
diff --git a/subversion/svnmucc/svnmucc.c b/subversion/svnmucc/svnmucc.c
index ce136ad..77a589b 100644
--- a/subversion/svnmucc/svnmucc.c
+++ b/subversion/svnmucc/svnmucc.c
@@ -437,7 +437,7 @@ log_message_func(const char **log_msg,
 
       SVN_ERR(svn_cmdline__edit_string_externally(
                       &msg, NULL, NULL, "", msg, "svnmucc-commit",
-                      lmb->ctx->config, TRUE, NULL, FALSE, pool));
+                      lmb->ctx->config, TRUE, NULL, FALSE, NULL, pool));
 
       if (msg && msg->data)
         *log_msg = msg->data;
